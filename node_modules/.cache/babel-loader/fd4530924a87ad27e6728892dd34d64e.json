{"ast":null,"code":"import _defineProperty from \"/Users/keerthi/work/Clicky-Game/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"/Users/keerthi/work/Clicky-Game/src/components/Game/index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { Component } from \"react\";\nimport Nav from \"../Nav\";\nimport Header from \"../Header\";\nimport Container from \"../Container\";\nimport ClickItem from \"../ClickItem\";\nimport Footer from \"../Footer\";\nimport data from \"../../data.json\";\n\nclass Game extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      data,\n      score: 0,\n      topScore: 0\n    };\n\n    this.handleCorrectGuess = newData => {\n      const _this$state = this.state,\n            topScore = _this$state.topScore,\n            score = _this$state.score;\n      const newScore = score + 1;\n      const newTopScore = newScore > topScore ? newScore : topScore;\n      this.setState({\n        data: this.shuffleData(newData),\n        score: newScore,\n        topScore: newTopScore\n      });\n    };\n\n    this.handleIncorrectGuess = data => {\n      this.setState({\n        data: this.resetData(data),\n        score: 0\n      });\n    };\n\n    this.resetData = data => {\n      const resetData = data.map(item => _objectSpread({}, item, {\n        clicked: false\n      }));\n      return this.shuffleData(resetData);\n    };\n\n    this.shuffleData = data => {\n      let i = data.length - 1;\n\n      while (i > 0) {\n        const j = Math.floor(Math.random() * (i + 1));\n        const temp = data[i];\n        data[i] = data[j];\n        data[j] = temp;\n        i--;\n      }\n\n      return data;\n    };\n\n    this.handleItemClick = id => {\n      let guessedCorrectly = false;\n      const newData = this.state.data.map(item => {\n        const newItem = _objectSpread({}, item);\n\n        if (newItem.id === id) {\n          if (!newItem.clicked) {\n            newItem.clicked = true;\n            guessedCorrectly = true;\n          }\n        }\n\n        return newItem;\n      });\n      guessedCorrectly ? this.handleCorrectGuess(newData) : this.handleIncorrectGuess(newData);\n    };\n  }\n\n  componentDidMount() {\n    this.setState({\n      data: this.shuffleData(this.state.data)\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      score: this.state.score,\n      topScore: this.state.topsScore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, this.state.data.map(item => {\n      React.createElement(ClickItem, {\n        key: item.id,\n        id: item.id,\n        shake: !this.state.score && this.state.topScore,\n        handleClick: this.handleItemClick,\n        image: item.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      });\n    })), React.createElement(Footer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/keerthi/work/Clicky-Game/src/components/Game/index.js"],"names":["React","Component","Nav","Header","Container","ClickItem","Footer","data","Game","state","score","topScore","handleCorrectGuess","newData","newScore","newTopScore","setState","shuffleData","handleIncorrectGuess","resetData","map","item","clicked","i","length","j","Math","floor","random","temp","handleItemClick","id","guessedCorrectly","newItem","componentDidMount","render","topsScore","image"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,OAAOC,IAAP,MAAiB,iBAAjB;;AAEA,MAAMC,IAAN,SAAmBR,KAAK,CAACC,SAAzB,CAAmC;AAAA;AAAA;AAAA,SACjCQ,KADiC,GACzB;AACNF,MAAAA,IADM;AAENG,MAAAA,KAAK,EAAE,CAFD;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KADyB;;AAAA,SAWjCC,kBAXiC,GAWZC,OAAO,IAAI;AAAA,0BACF,KAAKJ,KADH;AAAA,YACtBE,QADsB,eACtBA,QADsB;AAAA,YACZD,KADY,eACZA,KADY;AAE9B,YAAMI,QAAQ,GAAGJ,KAAK,GAAG,CAAzB;AACA,YAAMK,WAAW,GAAGD,QAAQ,GAAGH,QAAX,GAAsBG,QAAtB,GAAiCH,QAArD;AACA,WAAKK,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAE,KAAKU,WAAL,CAAiBJ,OAAjB,CADM;AAEZH,QAAAA,KAAK,EAAEI,QAFK;AAGZH,QAAAA,QAAQ,EAAEI;AAHE,OAAd;AAKD,KApBgC;;AAAA,SAsBjCG,oBAtBiC,GAsBVX,IAAI,IAAI;AAC7B,WAAKS,QAAL,CAAc;AACZT,QAAAA,IAAI,EAAE,KAAKY,SAAL,CAAeZ,IAAf,CADM;AAEZG,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KA3BgC;;AAAA,SA6BjCS,SA7BiC,GA6BrBZ,IAAI,IAAI;AAClB,YAAMY,SAAS,GAAGZ,IAAI,CAACa,GAAL,CAASC,IAAI,sBAAUA,IAAV;AAAgBC,QAAAA,OAAO,EAAE;AAAzB,QAAb,CAAlB;AACA,aAAO,KAAKL,WAAL,CAAiBE,SAAjB,CAAP;AACD,KAhCgC;;AAAA,SAkCjCF,WAlCiC,GAkCnBV,IAAI,IAAI;AACpB,UAAIgB,CAAC,GAAGhB,IAAI,CAACiB,MAAL,GAAc,CAAtB;;AACA,aAAOD,CAAC,GAAG,CAAX,EAAc;AACZ,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AACA,cAAMM,IAAI,GAAGtB,IAAI,CAACgB,CAAD,CAAjB;AACAhB,QAAAA,IAAI,CAACgB,CAAD,CAAJ,GAAUhB,IAAI,CAACkB,CAAD,CAAd;AACAlB,QAAAA,IAAI,CAACkB,CAAD,CAAJ,GAAUI,IAAV;AACAN,QAAAA,CAAC;AACF;;AACD,aAAOhB,IAAP;AACD,KA5CgC;;AAAA,SA8CjCuB,eA9CiC,GA8CfC,EAAE,IAAI;AACtB,UAAIC,gBAAgB,GAAG,KAAvB;AACA,YAAMnB,OAAO,GAAG,KAAKJ,KAAL,CAAWF,IAAX,CAAgBa,GAAhB,CAAoBC,IAAI,IAAI;AAC1C,cAAMY,OAAO,qBAAQZ,IAAR,CAAb;;AACA,YAAIY,OAAO,CAACF,EAAR,KAAeA,EAAnB,EAAuB;AACrB,cAAI,CAACE,OAAO,CAACX,OAAb,EAAsB;AACpBW,YAAAA,OAAO,CAACX,OAAR,GAAkB,IAAlB;AACAU,YAAAA,gBAAgB,GAAG,IAAnB;AACD;AACF;;AACD,eAAOC,OAAP;AACD,OATe,CAAhB;AAUAD,MAAAA,gBAAgB,GACZ,KAAKpB,kBAAL,CAAwBC,OAAxB,CADY,GAEZ,KAAKK,oBAAL,CAA0BL,OAA1B,CAFJ;AAGD,KA7DgC;AAAA;;AAOjCqB,EAAAA,iBAAiB,GAAG;AAClB,SAAKlB,QAAL,CAAc;AAAET,MAAAA,IAAI,EAAE,KAAKU,WAAL,CAAiB,KAAKR,KAAL,CAAWF,IAA5B;AAAR,KAAd;AACD;;AAsDD4B,EAAAA,MAAM,GAAG;AACP,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWC,KAAvB;AAA8B,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAW2B,SAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,EAGE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAK3B,KAAL,CAAWF,IAAX,CAAgBa,GAAhB,CAAoBC,IAAI,IAAI;AAC3B,0BAAC,SAAD;AACE,QAAA,GAAG,EAAEA,IAAI,CAACU,EADZ;AAEE,QAAA,EAAE,EAAEV,IAAI,CAACU,EAFX;AAGE,QAAA,KAAK,EAAE,CAAC,KAAKtB,KAAL,CAAWC,KAAZ,IAAqB,KAAKD,KAAL,CAAWE,QAHzC;AAIE,QAAA,WAAW,EAAE,KAAKmB,eAJpB;AAKE,QAAA,KAAK,EAAET,IAAI,CAACgB,KALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOD,KARA,CADH,CAHF,EAcE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAdF,CADF;AAkBD;;AAlFgC;;AAqFnC,eAAe7B,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Nav from \"../Nav\";\nimport Header from \"../Header\";\nimport Container from \"../Container\";\nimport ClickItem from \"../ClickItem\";\nimport Footer from \"../Footer\";\nimport data from \"../../data.json\";\n\nclass Game extends React.Component {\n  state = {\n    data,\n    score: 0,\n    topScore: 0\n  };\n\n  componentDidMount() {\n    this.setState({ data: this.shuffleData(this.state.data) });\n  }\n\n  handleCorrectGuess = newData => {\n    const { topScore, score } = this.state;\n    const newScore = score + 1;\n    const newTopScore = newScore > topScore ? newScore : topScore;\n    this.setState({\n      data: this.shuffleData(newData),\n      score: newScore,\n      topScore: newTopScore\n    });\n  };\n\n  handleIncorrectGuess = data => {\n    this.setState({\n      data: this.resetData(data),\n      score: 0\n    });\n  };\n\n  resetData = data => {\n    const resetData = data.map(item => ({ ...item, clicked: false }));\n    return this.shuffleData(resetData);\n  };\n\n  shuffleData = data => {\n    let i = data.length - 1;\n    while (i > 0) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = data[i];\n      data[i] = data[j];\n      data[j] = temp;\n      i--;\n    }\n    return data;\n  };\n\n  handleItemClick = id => {\n    let guessedCorrectly = false;\n    const newData = this.state.data.map(item => {\n      const newItem = { ...item };\n      if (newItem.id === id) {\n        if (!newItem.clicked) {\n          newItem.clicked = true;\n          guessedCorrectly = true;\n        }\n      }\n      return newItem;\n    });\n    guessedCorrectly\n      ? this.handleCorrectGuess(newData)\n      : this.handleIncorrectGuess(newData);\n  };\n\n  render() {\n    return (\n      <div>\n        <Nav score={this.state.score} topScore={this.state.topsScore} />\n        <Header />\n        <Container>\n          {this.state.data.map(item => {\n            <ClickItem\n              key={item.id}\n              id={item.id}\n              shake={!this.state.score && this.state.topScore}\n              handleClick={this.handleItemClick}\n              image={item.image}\n            />;\n          })}\n        </Container>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default Game;\n"]},"metadata":{},"sourceType":"module"}